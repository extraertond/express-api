{"version":3,"sources":["assets/logo/node-express-logo.png","assets/logo/bootstrap-logo.png","assets/logo/mysql-logo.svg","assets/logo/react-logo.jpg","assets/logo/typescript-logo.svg","utils/request/FrameworkRequest.ts","views/Frameworks/FrameworksList.tsx","components/navbar/Navbar.tsx","views/Frameworks/CreateFramework.tsx","views/Frameworks/EditFramework.tsx","views/others/About.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","baseURL","FrameworksList","useState","frameworks","setFrameworks","useEffect","Axios","get","then","response","status","Promise","reject","resolve","data","catch","err","frames","error","console","log","toString","eliminateFramework","id","delete","deleteFramework","window","location","href","className","style","textAlign","map","f","key","display","marginLeft","marginRight","marginBottom","name","description","url","marginTop","Button","onClick","TopNavbar","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","Nav","Link","CreateFramework","setName","setDescription","setUrl","submitFramework","framework","post","statusResponse","Form","width","Group","Label","Control","onChange","event","target","value","type","as","placeholder","disabled","variant","EditFramework","useParams","getFrameworkById","patch","updateFramework","About","src","react_logo","alt","margin","typescript_logo","boot_logo","node_express_logo","mysql_logo","fontSize","App","exact","path","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.dbc5bd5d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/node-express-logo.26bdcd15.png\";","module.exports = __webpack_public_path__ + \"static/media/bootstrap-logo.68fcf38c.png\";","module.exports = __webpack_public_path__ + \"static/media/mysql-logo.f80a91ba.svg\";","module.exports = __webpack_public_path__ + \"static/media/react-logo.e4fc4683.jpg\";","module.exports = __webpack_public_path__ + \"static/media/typescript-logo.c87187ca.svg\";","import Axios from \"axios\";\r\n\r\nconst baseURL = \"http://localhost:4000/\";\r\n\r\nexport const getFrameworks = () => {\r\n  return Axios.get(`${baseURL}frameworks`, {})\r\n    .then((response) => {\r\n      if (response.status !== 200) {\r\n        return Promise.reject(response.status);\r\n      } else {\r\n        return Promise.resolve(response.data);\r\n      }\r\n    })\r\n    .catch((err) => Promise.reject(err));\r\n};\r\n\r\nexport const postFramework = (framework: any) => {\r\n  return Axios.post(`${baseURL}frameworks`, framework, {\r\n    \r\n  })\r\n    .then(({ status, data }) => {\r\n      if (status !== 200) {\r\n        return Promise.reject(status);\r\n      } else {\r\n        return Promise.resolve(data);\r\n      }\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      Promise.reject(err);\r\n    });\r\n};\r\n\r\nexport const deleteFramework = (id: number) => {\r\n  return Axios.delete(`${baseURL}frameworks/delete/${id}`, {\r\n  })\r\n    .then(({ status, data }) => {\r\n      if (status !== 200) {\r\n        return Promise.reject(status);\r\n      } else {\r\n        return Promise.resolve(data);\r\n      }\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      Promise.reject(err);\r\n    });\r\n};\r\n\r\nexport const updateFramework = (framework: any, id: number) => {\r\n  return Axios.patch(`${baseURL}frameworks/update/` + id, framework, {\r\n  })\r\n    .then(({ status, data }) => {\r\n      if (status !== 200) {\r\n        return Promise.reject(status);\r\n      } else {\r\n        return Promise.resolve(data);\r\n      }\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      Promise.reject(err);\r\n    });\r\n};\r\n\r\nexport const getFrameworkById = (id: number) => {\r\n  return Axios.get(`${baseURL}frameworks/`+ id , {\r\n  })\r\n    .then((response) => {\r\n      if (response.status !== 200) {\r\n        return Promise.reject(response.status);\r\n      } else {\r\n        return Promise.resolve(response.data);\r\n      }\r\n    })\r\n    .catch((err) => Promise.reject(err));\r\n};\r\n\r\nexport const getCompanyIdByName = (companyName: string, token: string) => {\r\n  let filter = {\r\n    fields: [\"id\"],\r\n    where: {\r\n      name: companyName,\r\n    },\r\n  };\r\n\r\n  return Axios.get(`${baseURL}Companies?filter=` + JSON.stringify(filter), {\r\n    headers: {\r\n      Authorization: token,\r\n    },\r\n  })\r\n    .then(({ status, data }) => {\r\n      if (status !== 200) {\r\n        return Promise.reject(status);\r\n      } else {\r\n        return Promise.resolve(data[0]);\r\n      }\r\n    })\r\n    .catch((err) => Promise.reject(err));\r\n};\r\n\r\nexport const getCompanyNameById = (companyId: string, token: string) => {\r\n  let filter = {\r\n    fields: [\"name\"],\r\n    where: {\r\n      id: companyId,\r\n    },\r\n  };\r\n\r\n  return Axios.get(`${baseURL}Companies?filter=` + JSON.stringify(filter), {\r\n    headers: {\r\n      Authorization: token,\r\n    },\r\n  })\r\n    .then(({ status, data }) => {\r\n      if (status !== 200) {\r\n        return Promise.reject(status);\r\n      } else {\r\n        return Promise.resolve(data[0]);\r\n      }\r\n    })\r\n    .catch((err) => Promise.reject(err));\r\n};\r\n\r\n\r\n\r\nexport const editCompany = (info: any, id: number, token: any) => {\r\n  return Axios.patch(`${baseURL}Companies/${id}`, info, {\r\n    headers: {\r\n      Authorization: token,\r\n    },\r\n  })\r\n    .then(({ status, data }) => {\r\n      if (status !== 200) {\r\n        return Promise.reject(status);\r\n      } else {\r\n        return Promise.resolve(data);\r\n      }\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      Promise.reject(err);\r\n    });\r\n};\r\n\r\n\r\n\r\n","//Components\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Button } from 'react-bootstrap';\r\n\r\n// Styles\r\nimport '../../css/frameworks.css';\r\n\r\n// Requests\r\nimport { getFrameworks, deleteFramework } from \"../../utils/request/FrameworkRequest\";\r\n\r\n// Interfaces\r\nimport IFramework from \"../../interfaces/IFramework\";\r\n\r\n\r\nconst FrameworksList: React.FC = () => {\r\n\r\n  const [frameworks, setFrameworks] = useState<IFramework[]>([]);\r\n\r\n  useEffect(() => {\r\n    getFrameworks().then((frames: IFramework[])=>{\r\n      setFrameworks(frames)}).catch((error: string) => {\r\n      console.log(error.toString());\r\n    });\r\n  }, []);\r\n\r\n\r\n  const eliminateFramework = (id: number) => {\r\n    deleteFramework(id).then((response: any)=>{\r\n      window.location.href = \"/frameworks\"}).catch((error: string) => {\r\n      console.log(error.toString());\r\n    });\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"page-title\">Listado de Frameworks</div>\r\n      <div style={{textAlign: \"center\"}}>\r\n      {frameworks.map((f: IFramework) => (\r\n        <div key={f.id} className=\"frame-card card\" style={{display:\"inline-block\", marginLeft: \"2%\", marginRight: \"2%\", marginBottom: \"2%\"}}>\r\n        <div className=\"card-body\">\r\n          <h5 className=\"card-title\">{f.name}</h5>\r\n      <p className=\"card-text\">{f.description}</p>\r\n          <a href={f.url}>Ver Documentación</a>\r\n          <br></br>\r\n          <a style={{marginTop: \"3%\"}} href={\"/editar/\"+f.id} className=\"btn btn-primary\">Editar</a>\r\n          <br></br>\r\n          <Button style={{marginTop: \"3%\"}} onClick={()=> eliminateFramework(f.id)} className=\"btn btn-danger\">Eliminar</Button>\r\n        </div>\r\n      </div>\r\n      ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FrameworksList;\r\n","import React from \"react\";\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\n\r\nconst TopNavbar: React.FC = () => {\r\n\r\n  return (\r\n      <Navbar bg=\"light\" expand=\"lg\">\r\n  <Navbar.Brand href=\"/\">Frameworks de desarrollo web</Navbar.Brand>\r\n  <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n  <Navbar.Collapse id=\"basic-navbar-nav\">\r\n    <Nav className=\"mr-auto\">\r\n      <Nav.Link href=\"/frameworks\">Frameworks</Nav.Link>\r\n      <Nav.Link href=\"/agregar\">Añadir</Nav.Link>\r\n      <Nav.Link href=\"/about\">Información del proyecto</Nav.Link>\r\n    </Nav>\r\n\r\n  </Navbar.Collapse>\r\n</Navbar>\r\n\r\n  );\r\n};\r\n\r\nexport default TopNavbar;","import React, { useState } from \"react\";\r\n\r\n// Components\r\nimport { Form, Button } from 'react-bootstrap';\r\n\r\n// Styles\r\nimport '../../css/frameworks.css';\r\n\r\n// Interfaces\r\nimport { postFramework } from \"../../utils/request/FrameworkRequest\";\r\n\r\nconst CreateFramework: React.FC = () => {\r\n\r\n  const [name, setName] = useState<string>(\"\");\r\n  const [description, setDescription] = useState<string>(\"\");\r\n  const [url, setUrl] = useState<string>(\"\");\r\n\r\n\r\n  const nameHandler = (event: any) => {\r\n    setName(event.target.value);\r\n  }\r\n\r\n  const descriptionHandler = (event: any) => {\r\n    setDescription(event.target.value);\r\n  }\r\n\r\n  const urlHandler = (event: any) => {\r\n    setUrl(event.target.value);\r\n  }\r\n\r\n  const submitFramework = () => {\r\n    let frame = {\r\n      name: name,\r\n      description: description,\r\n      url: url\r\n    };\r\n    postFramework(frame).then((statusResponse: any)=>{\r\n      window.location.href = \"/frameworks\";\r\n    }).catch((error: string) => {\r\n      console.log(error.toString());\r\n    });\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"page-title\">Agregar Framework</div>\r\n      <div style={{ textAlign: \"center\"}}>\r\n        <Form style={{textAlign: \"left\", width: \"300px\", marginLeft: \"auto\", marginRight: \"auto\"}}>\r\n          <Form.Group >\r\n          <Form.Label>Nombre del Framework</Form.Label>\r\n          <Form.Control onChange={nameHandler} value={name} />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Descripción</Form.Label>\r\n    <Form.Control onChange={descriptionHandler} type=\"text\" value={description} as=\"textarea\" />\r\n  </Form.Group>\r\n  <Form.Group>\r\n    <Form.Label>Url</Form.Label>\r\n    <Form.Control onChange={urlHandler} value={url} placeholder=\"http://www.google.es...\" />\r\n  </Form.Group>\r\n    {\r\n      name === \"\" || url === \"\" || description === \"\"  ?\r\n      <Button disabled variant=\"primary\" onClick={submitFramework} style={{width: \"300px\"}}>\r\n      Enviar\r\n    </Button>\r\n     :\r\n    <Button variant=\"primary\" onClick={submitFramework} style={{width: \"300px\"}}>\r\n    Enviar\r\n  </Button>\r\n    }\r\n \r\n</Form>\r\n</div>\r\n    \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateFramework;","// Components\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n// Styles\r\nimport '../../css/frameworks.css';\r\n\r\n// Interfaces\r\nimport { getFrameworkById, updateFramework } from \"../../utils/request/FrameworkRequest\";\r\nimport IFramework from '../../interfaces/IFramework';\r\n\r\nconst EditFramework = () => {\r\n\r\n  const [name, setName] = useState<string>(\"\");\r\n  const [description, setDescription] = useState<string>(\"\");\r\n  const [url, setUrl] = useState<string>(\"\");\r\n  let { id } =  (useParams());\r\n\r\n  useEffect(() => {\r\n    getFrameworkById(id).then((framework: IFramework)=>{\r\n        setName(framework.name);\r\n        setDescription(framework.description);\r\n        setUrl(framework.url);\r\n    }).catch((error: string) => {console.log(error.toString());});\r\n  }, [id]);\r\n\r\n\r\n  const nameHandler = (event: any) => {\r\n    setName(event.target.value);\r\n  }\r\n\r\n  const descriptionHandler = (event: any) => {\r\n    setDescription(event.target.value);\r\n  }\r\n\r\n  const urlHandler = (event: any) => {\r\n    setUrl(event.target.value);\r\n  }\r\n\r\n  const submitFramework = () => {\r\n    let frame = {\r\n      name: name,\r\n      description: description,\r\n      url: url\r\n    };\r\n    updateFramework(frame, id).then((statusResponse: any)=>{\r\n      window.location.href = \"/frameworks\";\r\n    }).catch((error: string) => {\r\n      console.log(error.toString());\r\n    });\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"page-title\">Editar Framework</div>\r\n      <div style={{ textAlign: \"center\"}}>\r\n        <Form style={{textAlign: \"left\", width: \"300px\", marginLeft: \"auto\", marginRight: \"auto\"}}>\r\n          <Form.Group >\r\n          <Form.Label>Nombre del Framework</Form.Label>\r\n          <Form.Control onChange={nameHandler} value={name} />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Descripción</Form.Label>\r\n    <Form.Control onChange={descriptionHandler} type=\"text\" value={description} as=\"textarea\" />\r\n  </Form.Group>\r\n  <Form.Group>\r\n    <Form.Label>Url</Form.Label>\r\n    <Form.Control onChange={urlHandler} value={url} placeholder=\"http://www.google.es...\" />\r\n  </Form.Group>\r\n    \r\n    <Button variant=\"primary\" onClick={submitFramework} style={{width: \"300px\"}}>\r\n    Actualizar\r\n  </Button>\r\n    \r\n \r\n</Form>\r\n</div>\r\n    \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditFramework;","//Components\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Button } from 'react-bootstrap';\r\n\r\n// Styles\r\nimport '../../css/frameworks.css';\r\n\r\n// Requests\r\nimport { getFrameworks, deleteFramework } from \"../../utils/request/FrameworkRequest\";\r\n\r\n// Interfaces\r\nimport IFramework from \"../../interfaces/IFramework\";\r\n\r\n// Logos\r\nimport node_express_logo from '../../assets/logo/node-express-logo.png';\r\nimport boot_logo from '../../assets/logo/bootstrap-logo.png';\r\nimport mysql_logo from '../../assets/logo/mysql-logo.svg';\r\nimport react_logo from '../../assets/logo/react-logo.jpg';\r\nimport typescript_logo from '../../assets/logo/typescript-logo.svg';\r\n\r\n\r\nconst About: React.FC = () => {\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"page-title\">Información del Proyecto</div>\r\n    <div style={{textAlign: \"center\"}}>\r\n    <img src={react_logo} alt=\"logo\" width= \"250px\" style={{ margin: \"20px\"}}/>\r\n    <img src={typescript_logo} alt=\"logo\" width= \"100px\" style={{ margin: \"20px\"}}  />\r\n    <img src={boot_logo} alt=\"logo\" width= \"100px\" style={{ margin: \"20px\"}}  />\r\n    <img src={node_express_logo} alt=\"logo\" width= \"220px\" style={{ margin: \"20px\"}} />\r\n    <img src={mysql_logo} alt=\"logo\" width= \"220px\"  />\r\n    \r\n    </div>\r\n    <div style={{width: \"50%\", textAlign: \"center\", marginLeft: \"auto\", marginRight: \"auto\", fontSize: \"20px\"}}>\r\n\r\n    <div>\r\n        Proyecto para autoaprendizaje creado por Néstor Fernández el 17/08/2020. Se trata de un proyecto cliente-servidor, la parte del cliente\r\n      se ha hecho con <b>React + Typescript + Bootstrap</b> y la parte de la API con <b>Node.js + Express + MySQL</b>. El proyecto está desplegado en un servidor\r\n      ubuntu 18.04 de DigitalOcean y manejado con Nginx.\r\n      </div>\r\n      <div style={{marginTop: \"20px\"}}>\r\n        Enlace al repositorio (código libre): <br></br>\r\n      <a style={{marginTop: \"3%\"}} href=\"https://github.com/extraertond/frameworks\"  target=\"_blank\" >Repositorio de GitHub</a>\r\n      </div>\r\n\r\n</div>\r\n      \r\n   \r\n      \r\n     \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from 'react-router-dom';\r\nimport './App.css';\r\nimport FrameworksList from './views/Frameworks/FrameworksList';\r\nimport TopNavbar from './components/navbar/Navbar';\r\nimport CreateFramework from './views/Frameworks/CreateFramework';\r\nimport EditFramework from './views/Frameworks/EditFramework';\r\nimport About from './views/others/About';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n    <div>\r\n      <TopNavbar />\r\n      <Switch>\r\n\r\n      <Route exact path=\"/\">\r\n          <About />\r\n        </Route>\r\n\r\n        <Route exact path=\"/frameworks\">\r\n          <FrameworksList />\r\n        </Route>\r\n\r\n        <Route exact path=\"/editar/:id\">\r\n          <EditFramework />\r\n        </Route>\r\n\r\n        <Route exact path=\"/agregar\">\r\n          <CreateFramework />\r\n        </Route>\r\n\r\n        <Route exact path=\"/about\">\r\n          <About />\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  </Router>\r\n  \r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}